# This GitHub Actions workflow is designed to build and push Docker images to GitHub Packages.
# It triggers on pushes to the 'main' branch and on a schedule, and it can also be triggered manually.

name: docker image building and pushing to GitHub Packages

on:
  push:
    branches:
      - 'main' # Trigger the workflow on pushes to the 'main' branch.
  schedule:
    - cron:  '30 4,16 * * *' # Trigger the workflow on a schedule (twice daily).
  workflow_dispatch: # Allow the workflow to be triggered manually.

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_BUILDKIT: 1 # Enable Docker BuildKit for faster builds.
  GHCR_USERNAME: ${{ github.repository_owner }} # Set the GitHub Container Registry username.
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }} # Set the GitHub Container Registry token.

jobs:
  docker:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner.
    steps:
      - name: Check if PR is from a fork
        run: echo "IS_FORK=$(if [ '${{ github.event.pull_request.head.repo.full_name }}' != '${{ github.repository }}' ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4 # Checkout the repository.
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build with Maven
        run: mvn clean install

      - name: Set Maven cache path
        run: echo "MAVEN_CACHE_PATH=$(realpath ~/.m2/repository)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3 # Set up QEMU for multi-platform builds.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Set up Docker Buildx for building and pushing images.

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3 # Log in to GitHub Container Registry.
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MAVEN_CACHE=${{ env.MAVEN_CACHE_PATH }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
