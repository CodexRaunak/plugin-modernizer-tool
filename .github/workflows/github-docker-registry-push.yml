# This GitHub Actions workflow is designed to build and push Docker images to GitHub Packages.
# It triggers on pushes to the 'main' branch and on a schedule, and it can also be triggered manually.

name: docker image building and pushing to GitHub Packages

on:
  push:
    branches:
      - 'main' # Trigger the workflow on pushes to the 'main' branch.
  schedule:
    - cron:  '30 4,16 * * *' # Trigger the workflow on a schedule (twice daily).
  workflow_dispatch: # Allow the workflow to be triggered manually.

env:
  DOCKER_BUILDKIT: 1 # Enable Docker BuildKit for faster builds.
  GHCR_USERNAME: ${{ github.repository_owner }} # Set the GitHub Container Registry username.
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }} # Set the GitHub Container Registry token.

jobs:
  docker:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner.
    steps:
      - name: Check if PR is from a fork
        run: echo "IS_FORK=$(if [ '${{ github.event.pull_request.head.repo.full_name }}' != '${{ github.repository }}' ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4 # Checkout the repository.
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - name: Retrieve modified files
        id: changes
        run: echo "files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Check for Dockerfile and context changes
        run: |
          for file in ${{ env.files }}; do
            if [[ $file =~ (^|/)Dockerfile($|/)|(^|/)dockerfiles/ ]]; then
              echo "Dockerfile or dockerfiles directory has changed."
              echo "Changed file: $file"
              break
            fi
          done
          
          if (( $? == 0 )); then
            echo "No Dockerfile or context directory changes. Skipping Docker image build and push steps."
            echo "Changed files: ${{ env.files }}"
          fi

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build with Maven
        run: mvn clean install

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3 # Set up QEMU for multi-platform builds.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Set up Docker Buildx for building and pushing images.

      - name: Login to GitHub Container Registry
        if: contains(env.files, 'Dockerfile')
        uses: docker/login-action@v3 # Log in to GitHub Container Registry.
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed -e 's#/#-#g')
          if [[ "$BRANCH_NAME" == "main" ]]; then BRANCH_NAME=""; fi
          echo "BRANCH=$BRANCH_NAME" >> $GITHUB_ENV
        id: extract_branch

      - name: Extract branch name and set BRANCH environment variable
        shell: bash
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed -e 's#/#-#g')
          if [[ "$BRANCH_NAME" == "main" ]]; then BRANCH_NAME=""; fi
          echo "BRANCH=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Set repository name to lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push the main image
        if: contains(env.files, 'Dockerfile') || contains(env.files, 'dockerfiles/')
        uses: docker/build-push-action@v5 # Build and push the Docker image.
        with:
          context: ./
          platforms: linux/amd64, linux/aarch64
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/plugin-modernizer:_${{ env.BRANCH }}
